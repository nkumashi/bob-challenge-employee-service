version: '3.3'

networks:
  app-tier:
    driver: bridge

services:
  db:
    image: mysql:5.7
    container_name: db
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    #networks:
    #  - app-tier
    volumes:
      - my-db:/var/lib/mysql

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    restart: always
    expose:
      - '2181'
    environment:
      - "ALLOW_ANONYMOUS_LOGIN=yes"
    networks:
      - app-tier

  kafka:
    image: 'bitnami/kafka'
    container_name: kafka
    restart: always
    ports:
      #- '29092:29092'
      - '9092:9092'      
    expose:
      - '9092'
    environment:
      # - "HOSTNAME_COMMAND=docker info | grep ^Name: | cut -d' ' -f 2"
      # - "KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181"            
      # - "ALLOW_PLAINTEXT_LISTENER=yes"
      # - "KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT"
      # - "KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      # - "KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092"
      # - "KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
      
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL                                            
    depends_on:
      - zookeeper
    networks:
      - app-tier

  #employee-service:
  #  image: employee-service
  #  container_name: employee-service
  #  restart: always
  #  ports: 
  #    - '8181:8181'
  #  depends_on: 
  #    - db
  #  networks:
  #    - app-tier
      
  #event-service:
  #  image: event-service
  #  container_name: event-service
  #  restart: always
  #  ports: 
  #    - '8182:8182'
  #  depends_on: 
  #    - db
  #  networks:
  #    - app-tier
      
# Names our volume
volumes:
  my-db: